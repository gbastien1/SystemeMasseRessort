{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww19780\viewh18780\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 _________________________________\
T\'e2ches Syst\'e8me masse ressort\
_________________________________\
\
Cr\'e9er les particules et les ressorts \'e0 distance 1 et 2\
\
updateVBO dans la classe CMesh pour faire la mise a jour du VBO avec glMapBuffer et (glUnmapBuffer?)\
\
Simulation du coup de vent en direction perpendiculaire au drap (champ de vecteurs sur le drap qui applique des forces sur les sommets)\
\
Appliquer la force de gravit\'e9 aux sommets\
\
R\'e9impl\'e9menter Phong de base dans le Vertex shader\
\
Update des vecteurs normaux \'e0 chaque frame dans le CPU\
\
impl\'e9menter fonction de correction g\'e9om\'e9trique\
\
boucle d\'92animation:\
- Calculer le pas d\'92int\'e9gration (k -> k+1)\
- Appliquer la correction g\'e9om\'e9trique sur les ressorts\
- MAJ du maillage, des vecteurs normaux, du VBO\
- Dessiner le frame \'e0 l\'92\'e9cran\
\
Impl\'e9mentation des classes: (voir \'e9nonc\'e9)\
-CSMR\
-CParticule\
-CRessort\
\
\
impl\'e9menter la fonction de vent f_vent (voir \'e9nonc\'e9)\
\
}